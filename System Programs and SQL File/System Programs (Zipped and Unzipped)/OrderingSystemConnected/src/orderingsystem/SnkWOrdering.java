/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orderingsystem;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rejean
 */
public class SnkWOrdering extends javax.swing.JFrame {

    /**
     * Creates new form Wings
     */
    int intQuantity = 1;
    float fltPrice;
    float fltAmount;
    public SnkWOrdering() {
        initComponents();
        this.setSize(971, 669);
        this.setLocationRelativeTo(null);
        txtQuantity.setText("1");  
        txtAmount.setText("0.0");
        txtQuantity.setEditable(false);
        txtAmount.setEditable(false);
        outofstock_500ml.setVisible(false);
        outofstock_700ml.setVisible(false);
        Connect();
        wocsol();
        wocsqd();
        plus_wocsol();
        plus_wocsqd();
    }
    Connection con;
    PreparedStatement pst;
    PreparedStatement pst2;
    PreparedStatement pst3;
    PreparedStatement pst4;
    ResultSet rs;
    ResultSet rs2;
    
    public void Connect()
    {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/ordering", "root", "");
        }
        
        catch (ClassNotFoundException ex){
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBlackLine = new javax.swing.JPanel();
        outofstock_700ml = new javax.swing.JLabel();
        outofstock_500ml = new javax.swing.JLabel();
        togbtn500 = new javax.swing.JToggleButton();
        togbtn700 = new javax.swing.JToggleButton();
        btnMinus = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        btnPlus = new javax.swing.JButton();
        txtSpecialInstruct = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        lblPath = new javax.swing.JLabel();
        lblExitWings = new javax.swing.JLabel();
        lblWings = new javax.swing.JLabel();
        btnOrderWings = new javax.swing.JButton();
        lblProdutName = new javax.swing.JLabel();
        lblBgWings = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        pnlBlackLine.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlBlackLineLayout = new javax.swing.GroupLayout(pnlBlackLine);
        pnlBlackLine.setLayout(pnlBlackLineLayout);
        pnlBlackLineLayout.setHorizontalGroup(
            pnlBlackLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlBlackLineLayout.setVerticalGroup(
            pnlBlackLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        getContentPane().add(pnlBlackLine);
        pnlBlackLine.setBounds(370, 20, 5, 60);

        outofstock_700ml.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        outofstock_700ml.setText("Wings Squad containers are out of stock!");
        getContentPane().add(outofstock_700ml);
        outofstock_700ml.setBounds(660, 220, 320, 22);

        outofstock_500ml.setFont(new java.awt.Font("Bahnschrift", 1, 15)); // NOI18N
        outofstock_500ml.setText("Wings Solo containers are out of stock!");
        getContentPane().add(outofstock_500ml);
        outofstock_500ml.setBounds(660, 170, 300, 22);

        togbtn500.setBackground(new java.awt.Color(255, 204, 0));
        togbtn500.setFont(new java.awt.Font("Bahnschrift", 1, 30)); // NOI18N
        togbtn500.setForeground(new java.awt.Color(255, 255, 255));
        togbtn500.setText("₱79 | SOLO");
        togbtn500.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                togbtn500MouseClicked(evt);
            }
        });
        getContentPane().add(togbtn500);
        togbtn500.setBounds(680, 160, 270, 40);

        togbtn700.setBackground(new java.awt.Color(255, 204, 0));
        togbtn700.setFont(new java.awt.Font("Bahnschrift", 1, 30)); // NOI18N
        togbtn700.setForeground(new java.awt.Color(255, 255, 255));
        togbtn700.setText("₱299 | SQUAD");
        togbtn700.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                togbtn700MouseClicked(evt);
            }
        });
        getContentPane().add(togbtn700);
        togbtn700.setBounds(680, 210, 270, 40);

        btnMinus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/orderingsystem/Minus.png"))); // NOI18N
        btnMinus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinusMouseClicked(evt);
            }
        });
        getContentPane().add(btnMinus);
        btnMinus.setBounds(690, 300, 60, 40);

        txtQuantity.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        txtQuantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0), 3));
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        getContentPane().add(txtQuantity);
        txtQuantity.setBounds(760, 300, 80, 40);

        btnPlus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/orderingsystem/Plus.png"))); // NOI18N
        btnPlus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPlusMouseClicked(evt);
            }
        });
        getContentPane().add(btnPlus);
        btnPlus.setBounds(850, 300, 60, 40);

        txtSpecialInstruct.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtSpecialInstruct.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSpecialInstruct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(198, 160, 7), 5));
        txtSpecialInstruct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpecialInstructActionPerformed(evt);
            }
        });
        getContentPane().add(txtSpecialInstruct);
        txtSpecialInstruct.setBounds(680, 390, 270, 100);

        txtAmount.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0), 3));
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        getContentPane().add(txtAmount);
        txtAmount.setBounds(680, 540, 270, 40);

        lblPath.setBackground(new java.awt.Color(255, 255, 0));
        lblPath.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        lblPath.setForeground(new java.awt.Color(255, 255, 102));
        lblPath.setText("MENU > SNACKS >");
        getContentPane().add(lblPath);
        lblPath.setBounds(380, 20, 240, 29);

        lblExitWings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/orderingsystem/EKS.png"))); // NOI18N
        lblExitWings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitWingsMouseClicked(evt);
            }
        });
        getContentPane().add(lblExitWings);
        lblExitWings.setBounds(880, 20, 70, 60);

        lblWings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/orderingsystem/WINGS.png"))); // NOI18N
        lblWings.setText("jLabel2");
        getContentPane().add(lblWings);
        lblWings.setBounds(10, 210, 620, 390);

        btnOrderWings.setBackground(new java.awt.Color(226, 176, 1));
        btnOrderWings.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        btnOrderWings.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderWings.setText("ORDER");
        btnOrderWings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrderWingsMouseClicked(evt);
            }
        });
        btnOrderWings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderWingsActionPerformed(evt);
            }
        });
        getContentPane().add(btnOrderWings);
        btnOrderWings.setBounds(680, 590, 240, 50);

        lblProdutName.setFont(new java.awt.Font("Bahnschrift", 0, 37)); // NOI18N
        lblProdutName.setText("Wings o' Clock");
        getContentPane().add(lblProdutName);
        lblProdutName.setBounds(380, 30, 330, 60);

        lblBgWings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/orderingsystem/snack1.jpg"))); // NOI18N
        getContentPane().add(lblBgWings);
        lblBgWings.setBounds(0, 0, 1330, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblExitWingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitWingsMouseClicked
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_lblExitWingsMouseClicked
public void wocsol(){
        try {

                 pst3 = con.prepareStatement("select ITEM_QTY from supplies where ITEM_CODE = ?");
		 pst3.setString(1,"WOCSOL");
		 rs2 = pst3.executeQuery();

            
            
            	 while(rs2.next())
            	{       
                        
                            int currentQty = Integer.parseInt(rs2.getString("ITEM_QTY"));
                            
                            int ctr_qty = POSNEW.qty_WOCSOL;
                            int ctr1= POSNEW.ctr_WOCSOL;
                            
                            
                            if(ctr1 != 0){
                                
                            if (ctr_qty == 0){
                            togbtn500.setVisible(false);
                            outofstock_500ml.setVisible(true);

                        }
                        else{
                            togbtn500.setVisible(true);
                            outofstock_500ml.setVisible(false);

                        }
                            }
                        
                            else if (ctr1 == 0){
                        
               		  if (currentQty == 0){
                            togbtn500.setVisible(false);
                            outofstock_500ml.setVisible(true);
                             POSNEW.ctr_WOCSOL = POSNEW.ctr_WOCSOL  +1;
                        }
                        else{
                            togbtn500.setVisible(true);
                            outofstock_500ml.setVisible(false);

                        }
                       
                }
               
                }

    
            
        }catch (SQLException ex) {
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

public void plus_wocsol(){
    
    try {

                 pst3 = con.prepareStatement("select ITEM_QTY from supplies where ITEM_CODE = ?");
		 pst3.setString(1,"WOCSOL");
		 rs2 = pst3.executeQuery();

            
            
            	 if(rs2.next())
            	{
   
               		int currentQty500 = Integer.parseInt(rs2.getString("ITEM_QTY"));
                        int ctr_qty = POSNEW.qty_WOCSOL;
                        int currentAmt = Integer.parseInt(txtQuantity.getText());
                        int ctr1= POSNEW.ctr_WOCSOL;

               
                        
                         if(ctr1 != 0){
                            
                            if( ctr_qty== currentAmt){
   
                                    btnPlus.setVisible(false);
                                
                                
                            }
                            else{
                                btnPlus.setVisible(true);
                            }
                        
                         }
                         else if (ctr1 == 0){
                             POSNEW.qty_WOCSOL = currentQty500;
                                 POSNEW.ctr_WOCSOL = POSNEW.ctr_WOCSOL +1;
                             if( currentQty500== currentAmt){

                                btnPlus.setVisible(false);
                                
                            }
                            else{
                                btnPlus.setVisible(true);
                            }
                         }
                         
                        
         
               }
          

    
            
        }catch (SQLException ex) {
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        }
}

public void plus_wocsqd(){
    
  try {

                 pst3 = con.prepareStatement("select ITEM_QTY from supplies where ITEM_CODE = ?");
		 pst3.setString(1,"WOCSQD");
		 rs2 = pst3.executeQuery();

            
            
            	 if(rs2.next())
            	{
   
               		int currentQty700 = Integer.parseInt(rs2.getString("ITEM_QTY"));
                        int ctr_qty = POSNEW.qty_WOCSQD;
                        int currentAmt = Integer.parseInt(txtQuantity.getText());
                        int ctr1= POSNEW.ctr_WOCSQD;
                        
                         if(ctr1 != 0){
                            
                            if(ctr_qty== currentAmt){
   
                                    btnPlus.setVisible(false);
                                
                                
                            }
                            else{
                                btnPlus.setVisible(true);
                            }
                        
                         }
                         else if (ctr1 == 0){
                             POSNEW.qty_WOCSQD = currentQty700;
                                 POSNEW.ctr_WOCSQD = POSNEW.ctr_WOCSQD +1;
                             if( currentQty700== currentAmt){

                                btnPlus.setVisible(false);
                                
                            }
                            else{
                                btnPlus.setVisible(true);
                            }
                         }
                         
                        
         
               }
          

    
            
        }catch (SQLException ex) {
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        }
}

public void wocsqd(){
     try {

                 pst3 = con.prepareStatement("select ITEM_QTY from supplies where ITEM_CODE = ?");
		 pst3.setString(1,"WOCSQD");
		 rs2 = pst3.executeQuery();

            
            
            	 while(rs2.next())
            	{       
                        
                            int currentQty = Integer.parseInt(rs2.getString("ITEM_QTY"));
                            
                            int ctr_qty = POSNEW.qty_WOCSQD;
                            int ctr1= POSNEW.ctr_WOCSQD;
                            
                            
                            if(ctr1 != 0){
                                
                            if (ctr_qty == 0){
                            togbtn700.setVisible(false);
                            outofstock_700ml.setVisible(true);

                        }
                        else{
                            togbtn700.setVisible(true);
                            outofstock_700ml.setVisible(false);

                        }
                            }
                        
                            else if (ctr1 == 0){
                        
               		  if (currentQty == 0){
                            togbtn700.setVisible(false);
                            outofstock_700ml.setVisible(true);
                             POSNEW.ctr_WOCSQD = POSNEW.ctr_WOCSQD  +1;
                        }
                        else{
                            togbtn700.setVisible(true);
                            outofstock_700ml.setVisible(false);

                        }
                       
                }
               
                }

    
            
        }catch (SQLException ex) {
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void togbtn500MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_togbtn500MouseClicked
        if(togbtn500.isSelected()){
          fltAmount+=79; 
          togbtn700.setVisible(false);
           plus_wocsol();
             txtQuantity.setText("1");  
             intQuantity = 1;
        }
        

        else{
            fltAmount-=79;
            btnPlus.setVisible(true);
            
            if(outofstock_700ml.isVisible()){
                
                togbtn700.setVisible(false);
            }
            else{
                togbtn700.setVisible(true);
            }
        }

        String strAmount = String.valueOf(fltAmount);
        txtAmount.setText(strAmount);
        fltPrice = fltAmount * intQuantity;
        String strPrice = String.valueOf(fltPrice);
        txtAmount.setText(strPrice);// TODO add your handling code here:
    }//GEN-LAST:event_togbtn500MouseClicked

    private void togbtn700MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_togbtn700MouseClicked
        if(togbtn700.isSelected()){
        fltAmount+=299;
        togbtn500.setVisible(false);
        plus_wocsqd();
          txtQuantity.setText("1");  
          intQuantity = 1;
        }
        else{
        fltAmount-=299;
        btnPlus.setVisible(true);
        if(outofstock_500ml.isVisible()){
                
                togbtn500.setVisible(false);
            }
            else{
                togbtn500.setVisible(true);
            }
        }

        String strAmount = String.valueOf(fltAmount);
        txtAmount.setText(strAmount);
        fltPrice = fltAmount * intQuantity;
        String strPrice = String.valueOf(fltPrice);
        txtAmount.setText(strPrice);// TODO add your handling code here:
    }//GEN-LAST:event_togbtn700MouseClicked

    private void btnMinusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinusMouseClicked
        if (intQuantity > 1) {
            intQuantity--;
            String strQuantity = String.valueOf(intQuantity);
            txtQuantity.setText(strQuantity);
            fltPrice = fltAmount * intQuantity;
            String strPrice = String.valueOf(fltPrice);
            txtAmount.setText(strPrice);
            
            if (togbtn500.isSelected()){
                plus_wocsol();
            }
            else if (togbtn700.isSelected()){
                plus_wocsqd();
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnMinusMouseClicked

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnPlusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlusMouseClicked
        intQuantity++;
        String strQuantity = String.valueOf(intQuantity);
        txtQuantity.setText(strQuantity);
        fltPrice = fltAmount * intQuantity;
        String strPrice = String.valueOf(fltPrice);
        txtAmount.setText(strPrice);
        
           if (togbtn500.isSelected()){
                plus_wocsol();
            }
            else if (togbtn700.isSelected()){
                plus_wocsqd();
            }// TODO add your handling code here:
    }//GEN-LAST:event_btnPlusMouseClicked

    private void txtSpecialInstructActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpecialInstructActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpecialInstructActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void btnOrderWingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderWingsActionPerformed

        String date_ordered = POSNEW.lblDate.getText();
        String amount = txtAmount.getText();
        float floatAmt = Float.parseFloat(amount);
        String qty = txtQuantity.getText();
        int intQty = Integer.parseInt(qty);
        String special1 = txtSpecialInstruct.getText();
        String num = POSNEW.lblRecNo.getText();
        int intNum = Integer.parseInt(num);
      
        if (togbtn500.isSelected()==false && togbtn700.isSelected()==false){
           new SizeSnack().setVisible(true);
       }
       
       
       else {
        Connect();
        try {
             pst = con.prepareStatement("insert into customer(Record_num,Qty,Prod_Code,Item_Code, Prod_Name,Date,Amt,Instructions)values(?,?,?,?,?,?,?,?)");
            if (togbtn500.isSelected()){
           
            pst.setInt(1, intNum);
            pst.setInt(2, intQty);
            pst.setString(3, "SNACKWOCLSOLO");
            pst.setString(4, "WOCSOL");
            pst.setString(5, "Wing O’ Clock (Solo)");
            pst.setString(6, date_ordered);
            pst.setFloat(7, floatAmt);
            pst.setString(8, special1);
            POSNEW.qty_WOCSOL = POSNEW.qty_WOCSOL - intQty;
            }
            
            else if (togbtn700.isSelected()){
            pst.setInt(1, intNum);
            pst.setInt(2, intQty);
            pst.setString(3, "SNACKWOCLSQAD");
            pst.setString(4, "WOCSQD");
            pst.setString(5, "Wing O’ Clock (Squad)");
            pst.setString(6, date_ordered);
            pst.setFloat(7, floatAmt);
            pst.setString(8, special1);
            POSNEW.qty_WOCSQD = POSNEW.qty_WOCSQD - intQty;
            }
           pst.executeUpdate();
          
            int currentNo = Integer.parseInt(POSNEW.lblRecNo.getText());
    
  
         int newNo = (int) (currentNo+1);
         String newNoGet = String.valueOf(newNo);
         POSNEW.lblRecNo.setText(newNoGet);
          
         String OldTotal = POSNEW.lblTotal.getText();
        String NewTotal = this.txtAmount.getText();
        float old = Float.parseFloat(OldTotal);
        float new1 = Float.parseFloat(NewTotal);
        float new2 = (old+new1);
        String new2Get = String.valueOf(new2);
        POSNEW.lblTotal.setText(new2Get);
        
        POSNEW.refresh_ctr = POSNEW.refresh_ctr + 1;
        POSNEW.btnRefresh.setEnabled(true);
        POSNEW.btnConfirm.setEnabled(false);
        // TODO add your handling code here:
        
        
         float currentDiscount1 = Float.parseFloat(POSNEW.lblAppliedDiscount.getText());
        float finalTotal1 = (float) (new2 - currentDiscount1);
        String fintot1Get = String.valueOf(finalTotal1);
        POSNEW.lblPaymentAmount.setText(fintot1Get);
        
        if (POSNEW.rdbtnSenior.isSelected()== true || POSNEW.rdbtnPWD.isSelected()== true)
         {
            
            float new4 = (float) (new2 * 0.20);
            String new4Get = String.valueOf(new4);
            POSNEW.lblAppliedDiscount.setText(new4Get);

            float finalTotal = (float) (new2 - new4);
            String fintotGet = String.valueOf(finalTotal);
            POSNEW.lblPaymentAmount.setText(fintotGet);
         }
        this.setVisible(false);

            
          
        } catch (SQLException ex) {
            Logger.getLogger(SnkWOrdering.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_btnOrderWingsActionPerformed

    private void btnOrderWingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrderWingsMouseClicked
       
    }//GEN-LAST:event_btnOrderWingsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SnkWOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SnkWOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SnkWOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SnkWOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SnkWOrdering().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnOrderWings;
    private javax.swing.JButton btnPlus;
    private javax.swing.JLabel lblBgWings;
    private javax.swing.JLabel lblExitWings;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblProdutName;
    private javax.swing.JLabel lblWings;
    private javax.swing.JLabel outofstock_500ml;
    private javax.swing.JLabel outofstock_700ml;
    private javax.swing.JPanel pnlBlackLine;
    private javax.swing.JToggleButton togbtn500;
    private javax.swing.JToggleButton togbtn700;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSpecialInstruct;
    // End of variables declaration//GEN-END:variables
}
